---
#########################
#########################
## Deploy Docker Image ##
#########################
#########################

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

name: Stage deployment

#######################################
# Start the job on all push to master #
#######################################
on:
  pull_request_target:
    branches: [master]
    types: [opened, reopened, synchronize]

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: staging-deployment
    # Set the agent to run on
    runs-on: ubuntu-latest
    # Only run this on the main repo
    # if: github.repository == 'github/super-linter'
    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Start deployment       #
      ##########################
      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: staging
          ref: "refs/pull/${{ github.event.number }}/head"
          description: "depl_id: ${{ github.event.deployment.id }}, ref_id: ${{ github.head_ref }}"
          log_args: true

     #############################
     # Init deployment variables #
     #############################
      - name: init deploymnet variables
        id: set_variables
        run: |
          echo ::set-output name=BUILD_RELEASE::${GITHUB_REF#refs/tags/}
          echo ::set-output name=BUILD_RELEASE_MAJOR::`echo ${GITHUB_REF%%.*} | awk -F/ '{ print v$3; }'`
          echo ::set-output name=BUILD_DATE::`date -u +'%Y-%m-%dT%H:%M:%SZ'`
          echo ::set-output name=BUILD_DATE_SQUEEZED::`date -u +'%Y%m%dT%H%M%S'`
          echo ::set-output name=BUILD_REPO::$(echo ${GITHUB_REPOSITORY} | awk -F/ '{ print $2; }')
          echo ::set-output name=BUILD_OWNER_REPO::${GITHUB_REPOSITORY}
      - name: print deploymnet variables
        run: |
          echo $BUILD_RELEASE
          echo $BUILD_RELEASE_MAJOR
          echo $BUILD_DATE
          echo $BUILD_DATE_SQUEEZED
          echo $BUILD_REPO
          echo "owner/repo: $BUILD_OWNER_REPO"
          echo "prev commit_id: ${{ github.event.pull_request.head.sha }}"
          echo "merge commit_id: ${{ github.sha }}"
        env:
          BUILD_RELEASE: ${{ steps.set_variables.outputs.BUILD_RELEASE }}
          BUILD_RELEASE_MAJOR: ${{ steps.set_variables.outputs.BUILD_RELEASE_MAJOR }}
          BUILD_DATE: ${{ steps.set_variables.outputs.BUILD_DATE }}
          BUILD_DATE_SQUEEZED: ${{ steps.set_variables.outputs.BUILD_DATE_SQUEEZED }}
          BUILD_REPO: ${{ steps.set_variables.outputs.BUILD_REPO }}
          BUILD_OWNER_REPO: ${{ steps.set_variables.outputs.BUILD_OWNER_REPO }}

      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
          
      ########################
      # Setup Docker build X #
      ########################
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          driver-opts: image=moby/buildkit:v0.9.1

      ######################################
      # Login to GitHub Container registry #
      ######################################
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      ####################################
      # Replace variables in Dockerfiles #
      ####################################
      # - name: Replace variables in Dockerfiles
      #    run: |
      #      find ./supplemental/docker/ -name Dockerfile* | xargs -I % sed -i -e 's/__BUILD_REPO__/${{ steps.set_variables.outputs.BUILD_REPO }}/' %

      ###########################################
      # Build and Push containers to registries #
      ###########################################
      - name: Build and push
        if: success()
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          build-args: |
            BUILD_DATE=${{ steps.set_variables.outputs.BUILD_DATE }}
            BUILD_REVISION=${{ github.sha }}
            BUILD_VERSION=${{ github.sha }}
            BUILD_REPO=${{ steps.set_variables.outputs.BUILD_REPO }}
            BUILD_OWNER_REPO=${{ steps.set_variables.outputs.BUILD_OWNER_REPO }}
            BUILD_BASE_COMMIT_ID=${{ github.sha }}
            BUILD_PR_HEAD_COMMIT_ID=${{ github.event.pull_request.head.sha }}

          push: true
          tags: |
            ghcr.io/ivankuchin/${{ steps.set_variables.outputs.BUILD_REPO }}-stage:${{ steps.set_variables.outputs.BUILD_DATE_SQUEEZED }}
            ghcr.io/ivankuchin/${{ steps.set_variables.outputs.BUILD_REPO }}-stage:latest
      ##########################
      # Stop deployment        #
      ##########################
      - name: update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
